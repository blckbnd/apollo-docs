"use strict";(self.webpackChunkapollo_docs=self.webpackChunkapollo_docs||[]).push([[162],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),u=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return i.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return n?i.createElement(h,o(o({ref:t},s),{},{components:n})):i.createElement(h,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9390:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),o=["components"],l={sidebar_position:2},p="Getting started",u={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"Installation",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/"},next:{title:"Schema",permalink:"/category/schema"}},s={},d=[{value:"Installation",id:"installation",level:2},{value:"With Go",id:"with-go",level:3},{value:"Setting up",id:"setting-up",level:2},{value:"Running",id:"running",level:2},{value:"Realtime mode",id:"realtime-mode",level:3},{value:"Historical mode",id:"historical-mode",level:3},{value:"Rate limiting",id:"rate-limiting",level:3},{value:"Output",id:"output",level:2}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting started"),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("h3",{id:"with-go"},"With Go"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"go install github.com/chainbound/apollo\n")),(0,a.kt)("h2",{id:"setting-up"},"Setting up"),(0,a.kt)("p",null,"First, generate the config directory and files:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"apollo init\n")),(0,a.kt)("p",null,"This will generate the configuration files (",(0,a.kt)("inlineCode",{parentName:"p"},"config.yml")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"schema.hcl"),") and put it into your configuration\ndirectory, which will either be ",(0,a.kt)("inlineCode",{parentName:"p"},"$XDG_CONFIG_HOME/apollo")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/.config/apollo"),". This is the directory\nin which you have to configure ",(0,a.kt)("inlineCode",{parentName:"p"},"apollo"),", and it's also the directory where ",(0,a.kt)("inlineCode",{parentName:"p"},"apollo")," will try to find the specified\ncontract ABIs."),(0,a.kt)("h2",{id:"running"},"Running"),(0,a.kt)("h3",{id:"realtime-mode"},"Realtime mode"),(0,a.kt)("p",null,"By default, ",(0,a.kt)("inlineCode",{parentName:"p"},"apollo")," will be running in historical mode, according to the parameters defined in the schema.\nTo run it in realtime mode, pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"--realtime")," flag, along with an\noutput option (either ",(0,a.kt)("inlineCode",{parentName:"p"},"--csv"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"--db")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"--stdout"),"). See the ",(0,a.kt)("a",{parentName:"p",href:"##Output"},"Output")," for more info on that.\nThe time parameters will be defined in the schema."),(0,a.kt)("h3",{id:"historical-mode"},"Historical mode"),(0,a.kt)("p",null,"With historical mode, the only required parameter is an output option. The\ntime parameters have to be defined in the schema."),(0,a.kt)("h3",{id:"rate-limiting"},"Rate limiting"),(0,a.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Most API providers will rate-limit you start with the default parameters."))),(0,a.kt)("p",null,"Apollo has a ",(0,a.kt)("inlineCode",{parentName:"p"},"--rate-limit")," option which we highly recommend you use. The default is at ",(0,a.kt)("strong",{parentName:"p"},"100"),",\nwhich is quite high. In our experience, an option like ",(0,a.kt)("strong",{parentName:"p"},"20")," should work with most providers.\nIf you have your own node running, you can crank this number up.\nWhen using our own ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ledgerwatch/erigon"},"Erigon")," node, we could set it at ",(0,a.kt)("strong",{parentName:"p"},"500"),"\nwithout any problems."),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"There are 3 output options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"stdout"),": this will just print the results to your terminal."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"csv"),": this will save your output into a csv file. The name of your file corresponds to the name of your query. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"db"),": this will save your output into a Postgres SQL table. The settings are defined in ",(0,a.kt)("inlineCode",{parentName:"li"},"config.yml")," in your ",(0,a.kt)("inlineCode",{parentName:"li"},"apollo"),"\nconfig directory.")))}m.isMDXComponent=!0}}]);