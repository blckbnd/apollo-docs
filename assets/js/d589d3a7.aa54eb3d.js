"use strict";(self.webpackChunkapollo_docs=self.webpackChunkapollo_docs||[]).push([[162],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(u,".").concat(m)]||d[m]||s[m]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9390:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={sidebar_position:2},u="Getting started",p={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"Installation",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/"},next:{title:"Schema",permalink:"/category/schema"}},c={},s=[{value:"Installation",id:"installation",level:2},{value:"With Go",id:"with-go",level:3},{value:"Setting up",id:"setting-up",level:2},{value:"Running",id:"running",level:2},{value:"Realtime mode",id:"realtime-mode",level:3},{value:"Historical mode",id:"historical-mode",level:3},{value:"Output",id:"output",level:2}],d={toc:s};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting started"),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("h3",{id:"with-go"},"With Go"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go install github.com/chainbound/apollo\n")),(0,o.kt)("h2",{id:"setting-up"},"Setting up"),(0,o.kt)("p",null,"First, generate the config directory and files:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apollo init\n")),(0,o.kt)("p",null,"This will generate the configuration files (",(0,o.kt)("inlineCode",{parentName:"p"},"config.yml")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"schema.hcl"),") and put it into your configuration\ndirectory, which will either be ",(0,o.kt)("inlineCode",{parentName:"p"},"$XDG_CONFIG_HOME/apollo")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"$HOME/.config/apollo"),". This is the directory\nin which you have to configure ",(0,o.kt)("inlineCode",{parentName:"p"},"apollo"),", and it's also the directory where ",(0,o.kt)("inlineCode",{parentName:"p"},"apollo")," will try to find the specified\ncontract ABIs."),(0,o.kt)("h2",{id:"running"},"Running"),(0,o.kt)("h3",{id:"realtime-mode"},"Realtime mode"),(0,o.kt)("p",null,"By default, ",(0,o.kt)("inlineCode",{parentName:"p"},"apollo")," will be running in historical mode, according to the parameters defined in the schema.\nTo run it in realtime mode, pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"--realtime")," flag, along with an\noutput option (either ",(0,o.kt)("inlineCode",{parentName:"p"},"--csv"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"--db")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"--stdout"),"). See the ",(0,o.kt)("a",{parentName:"p",href:"##Output"},"Output")," for more info on that.\nThe time parameters will be defined in the schema."),(0,o.kt)("h3",{id:"historical-mode"},"Historical mode"),(0,o.kt)("p",null,"With historical mode, the only required parameter is an output option. The\ntime parameters have to be defined in the schema."),(0,o.kt)("h2",{id:"output"},"Output"),(0,o.kt)("p",null,"There are 3 output options:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"stdout"),": this will just print the results to your terminal."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"csv"),": this will save your output into a csv file. The name of your file corresponds to the name of your query. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"db"),": this will save your output into a Postgres SQL table. The settings are defined in ",(0,o.kt)("inlineCode",{parentName:"li"},"config.yml")," in your ",(0,o.kt)("inlineCode",{parentName:"li"},"apollo"),"\nconfig directory.")))}m.isMDXComponent=!0}}]);