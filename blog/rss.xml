<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Apollo Docs Blog</title>
        <link>https://apollo.chainbound.io/apollo-docs/blog</link>
        <description>Apollo Docs Blog</description>
        <lastBuildDate>Tue, 14 Jun 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Introducing Apollo: analyzing the usage of ERC4626 across chains]]></title>
            <link>https://apollo.chainbound.io/apollo-docs/blog/erc4626-usage</link>
            <guid>erc4626-usage</guid>
            <pubDate>Tue, 14 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Introduction]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="introduction">Introduction<a class="hash-link" href="#introduction" title="Direct link to heading">​</a></h2><p>For the last few months, we've been working on <a href="https://github.com/chainbound/apollo" target="_blank" rel="noopener noreferrer">Apollo</a>
(<a href="https://apollo.chainbound.io" target="_blank" rel="noopener noreferrer">docs</a>), a tool
to make it easy for anyone to <strong>query</strong>, <strong>filter</strong>, <strong>transform</strong> and <strong>save</strong> EVM chaindata based on a schema.</p><p>We built Apollo because we needed to be able to scrape obscure EVM chaindata fast, and the tools currently out there
were too limiting in what they could do. They either run only on a couple chains, or rely on indexing, which is a process
that takes time and is not feasible for just any protocol. <strong>Apollo</strong> interacts directly with the standardized
<a href="https://eth.wiki/json-rpc/API" target="_blank" rel="noopener noreferrer">JSON RPC API</a> that any EVM node implementation should expose. This means that
as long as you have a JSON RPC API for your chain, <strong>Apollo will be able to run there</strong>. The only other thing
you need is an <a href="https://www.quicknode.com/guides/solidity/what-is-an-abi" target="_blank" rel="noopener noreferrer">ABI</a>.</p><p>We believe that the best way to introduce a tool like this is to show its value in a <strong>real world example</strong>.
Inspired by <a href="https://twitter.com/boredGenius/status/1533531858591309824" target="_blank" rel="noopener noreferrer">this tweet</a>, we set about analyzing
the usage of the new <a href="https://eips.ethereum.org/EIPS/eip-4626" target="_blank" rel="noopener noreferrer">ERC4626 Tokenized Vault Standard</a> across
multiple chains. If you would like to explore more chains, at the
end of the article you will be able to do that yourself, because we are open-sourcing Apollo.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="what-is-erc4626">What is ERC4626?<a class="hash-link" href="#what-is-erc4626" title="Direct link to heading">​</a></h2><p>ERC4626 is a new token standard aims to clear up the problems with having different implementations of tokenized vaults.
One of the most powerful mechanisms in DeFi is <strong>composability</strong>, but composability doesn't work without standards. If you know
<a href="https://ethereum.org/en/developers/docs/standards/tokens/erc-20/" target="_blank" rel="noopener noreferrer">ERC20</a> (token standard) or
<a href="https://ethereum.org/en/developers/docs/standards/tokens/erc-721/" target="_blank" rel="noopener noreferrer">ERC721</a> (NFT standard), you know how crucial they are. One of the more important products in DeFi are yield-bearing tokenized
vaults. If you've ever staked Sushi in return for xSushi, or deposited ETH on Aave and received aETH, you've used these products.
They represent shares of an underlying token that generate interest over time.
The problem is that when building applications that can integrate with these tokens, you have to build an integration for each
separate implementation. This is complex, error-prone, and resource intensive, resulting in less applications actually doing it. <strong>Bad for composability</strong>.</p><p>ERC4626 aims to set a standard for these products called the Tokenized Vault Standard.
If an application works with ERC4626, it works with any yield-bearing token that
implements the standard. This will drastically lower the integration effort and will enable a renaissance in DeFi.
It will, for example, provide lending platforms the ability to easily accept any ERC4626 token as collateral,
which would be one example of <strong>composable yield</strong>.</p><p>Let's take a look at some of the events and methods of the interface (incomplete), because
these will be useful later.</p><div class="language-sol codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_YYkX">ierc20.sol</div><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-sol codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">abstract </span><span class="token keyword" style="color:#00009f">contract</span><span class="token plain"> </span><span class="token class-name">IERC4626</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> ERC20 </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Emitted every time someone deposits</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">event</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Deposit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> sender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> shares</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Emitted every time someone withdraws</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">event</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Withdraw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> sender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> shares</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Returns the address of the underlying token</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">asset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> virtual </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> asset</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Returns the amount of assets managed by the vault</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">totalAssets</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> virtual </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> totalAssets</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Mints `shares` vault tokens by depositing exactly `assets` underlying assets</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">deposit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> virtual </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> shares</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Mints exactly `shares` vault tokens by depositing `assets` underlying assets</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">mint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> shares</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> virtual </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Redeems `shares` from `assets`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">withdraw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint256</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> virtual </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> shares</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Redeems `shares` from `assets`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">redeem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint256</span><span class="token plain"> shares</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> virtual </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Other view functions omitted</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="analysis">Analysis<a class="hash-link" href="#analysis" title="Direct link to heading">​</a></h2><p>Since we believe ERC4626 will be a very important building block in future DeFi protocols, we wanted to analyze its usage.
Partly because we live in a multi-chain world, and partly because we want to highlight a competitive feature that <strong>Apollo</strong> has,
we will be looking at 4 chains: <strong>Ethereum</strong>, <strong>Polygon</strong>, <strong>Arbitrum</strong> and <strong>Optimism</strong>. This analysis serves
as an introduction to using Apollo, but you can also just move on to the <a href="#results">results</a>.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="apollo-workflow">Apollo workflow<a class="hash-link" href="#apollo-workflow" title="Direct link to heading">​</a></h3><p>This is the game plan: we are going to collect every ERC4626 <code>Deposit</code> event (see above) across
the chains, from February 1 until June 14. The problem is that the <code>Deposit</code> event signature
is not unique to the ERC4626 event, because it is derived from the event name and its types.
Under the hood, what we're actually filtering for is an event <strong>topic</strong>, which in this case will be</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">keccak256("Deposit(address,address,uint256,uint256)") = 0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>There are other <code>Deposit</code> events that have the same signature, so we need to find a way to filter out the right ones.
With Apollo, we can call methods at the time an event occurs, and the method will be called on the contract that
emitted the event. So to filter out the ERC4626 events, we can call the <code>asset</code> method, which is part of the interface.
If this call succeeds, we can be relatively sure the contract is an ERC4626 implementation.
If this call reverts, however, which means that the contract does not adhere to the standard, Apollo will just move on and save nothing.</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="schema">Schema<a class="hash-link" href="#schema" title="Direct link to heading">​</a></h4><p>This is the schema we're going to run:</p><div class="language-hcl codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_YYkX">schema.hcl</div><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-hcl codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token property" style="color:#36acaa">start_time</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> format_date(</span><span class="token string" style="color:#e3116c">"02-01-2006 15:04"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"01-02-2022 00:00"</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token property" style="color:#36acaa">end_time</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> now</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">loop</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">items</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"ethereum"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"polygon"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"arbitrum"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"optimism"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  query </span><span class="token string" style="color:#e3116c">"erc4626_deposits"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">chain</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event </span><span class="token string" style="color:#e3116c">"Deposit"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">abi</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"erc4626.abi.json"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">outputs</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"caller"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"owner"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"assets"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"shares"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// This will revert if the contract does not have</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// this method (required in the ERC4626 standard)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      method </span><span class="token string" style="color:#e3116c">"asset"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">outputs</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"asset"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      method </span><span class="token string" style="color:#e3116c">"decimals"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">outputs</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"decimals"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      method </span><span class="token string" style="color:#e3116c">"symbol"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">outputs</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"symbol"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">save</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">block</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> blocknumber</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">time</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> timestamp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">contract</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> contract_address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">tx</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> tx_hash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// We need the chain to differentiate </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// the results</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">chain</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> chain</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">underlying</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> asset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">caller</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> caller</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">owner</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> owner</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">assets</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> parse_decimals(assets, decimals)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">shares</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> parse_decimals(shares, decimals)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">symbol</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> symbol</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We first have to define our time range, which we can do with <code>start_time</code> and <code>end_time</code>. <code>format_date(fmt, date)</code> can be used
to convert a datetime to a UNIX timestamp, according to a format. The <code>now</code> variable is provided by the DSL.</p><p>Next up, we'll define a <code>loop</code> block. For every <code>item</code> in <code>items</code>, Apollo will create a separate query, with the <code>item</code> as a variable.
The name of the <code>query</code> (erc4626_deposits), will be the name of our output file / output table. We want to filter every
<code>Deposit</code> event, which we can do by declaring an <code>event</code> block with the <code>Deposit</code> label. In the event block, we define the ABI
(which can be found in the Apollo config directory, see <a href="https://apollo.chainbound.io/getting-started#setting-up" target="_blank" rel="noopener noreferrer">setting up docs</a>),
and the <code>outputs</code> we want to save for further processing. These have to match the ABI exactly.</p><p>After this, we want to gather some extra information by calling some methods on the contract of interest.
We do that with <code>method</code> blocks, which have the method name as a label. Just like in <code>event</code>, we define our outputs.
There are 2 blocks that we don't need here, which are <code>transform</code> and <code>filter</code>, but you can read more on them in the
<a href="https://apollo.chainbound.io/schema/intro#transform" target="_blank" rel="noopener noreferrer">schema docs</a>. In the <code>save</code> block, we define the final format
of our output columns. The <code>save</code> block has access to any previous <code>output</code> parameters, as well as other event context variables
like <code>blocknumber</code>, <code>timestamp</code>, <code>contract_address</code>, <code>tx_hash</code>, and <code>chain</code>, which we all want to save.
There are some helper functions available as well, and we'll use <code>parse_decimals(raw, decimals)</code> to format
our output.</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="running">Running<a class="hash-link" href="#running" title="Direct link to heading">​</a></h4><p>Before running, make sure that every <code>chain</code> has a corresponding JSON-RPC API field in your <code>config.yml</code>. We suggest using either your own
nodes, or providers like <a href="https://www.alchemy.com" target="_blank" rel="noopener noreferrer">Alchemy</a> or <a href="https://chainstack.com" target="_blank" rel="noopener noreferrer">Chainstack</a>, because the default public endpoints will not do.
Even when using a specialized provider, you can get rate limited. This is why we've also provided an option to rate limit Apollo itself.
For this research, we used Alchemy APIs with the default value of <code>100</code>:</p><div class="language-bash codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-bash codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">apollo --stdout --csv --log-level </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> --rate-limit </span><span class="token number" style="color:#36acaa">100</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We managed to not exceed our CU capacity, and not get any timeouts. It took around 5 minutes to collect this data.
If you have your own node, you can crank this number up. When running this with our own <a href="https://github.com/ledgerwatch/erigon" target="_blank" rel="noopener noreferrer">Erigon</a>
node and a value of <code>500</code>, we managed to collect everything in around 30 seconds.</p><p>Internally, Apollo uses primitive caching, and methods like <code>symbol</code> and <code>decimals</code> are cached for every contract,
drastically reducing the amount of calls made to the API. At the end of execution, you will see some stats printed for each chain:
<img loading="lazy" src="/apollo-docs/assets/images/apollo-erc4626-59d807bd5ebbf3ef3849fe8eeed8a31f.png" width="986" height="463" class="img_E7b_"></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="results">Results<a class="hash-link" href="#results" title="Direct link to heading">​</a></h3><p>Get the results (8328 lines): <a target="_blank" href="/apollo-docs/assets/files/erc4626_deposits-fdd488d264947e92a5dfbf7c79d4cf09.csv">erc4626_deposits.csv</a></p><h4 class="anchor anchorWithStickyNavbar_mojV" id="daily-deposit-events-per-chain">Daily <code>Deposit</code> events per chain<a class="hash-link" href="#daily-deposit-events-per-chain" title="Direct link to heading">​</a></h4><p><a target="_blank" href="/apollo-docs/assets/files/daily-deposits-38081ff0550d49b63d220153cae5b541.svg"><img loading="lazy" src="/apollo-docs/assets/images/daily-deposits-38081ff0550d49b63d220153cae5b541.svg" width="6282" height="3383" class="img_E7b_"></a></p><p>As we can see here, ERC4626 adoption on Polygon has been the most succesful, perhaps surprisingly. Since its inception,
Polygon has had 4046 ERC4626 <code>Deposit</code> events. Ethereum comes in second
with 3287 events, Optimism third with 939 events, and finally Arbitrum, with only 55 events.
But Ethereum was by far the first with any <code>Deposit</code> events at all, we'll come back to that later.</p><p>Zooming in to where things become interesting, we can see that usage really started picking up on May 4th.
<a target="_blank" href="/apollo-docs/assets/files/daily-deposits-zoomed-6250a6657a7eed8a9c73faa5c9d65f52.svg"><img loading="lazy" src="/apollo-docs/assets/images/daily-deposits-zoomed-6250a6657a7eed8a9c73faa5c9d65f52.svg" width="6395" height="3569" class="img_E7b_"></a></p><p>This is when both <a href="https://docs.thorswap.finance/thorswap/usdthor-token/usdthor/vthor" target="_blank" rel="noopener noreferrer">Thorswap Staking V2</a> on Ethereum
and <a href="https://twitter.com/aavegotchi/status/1522212621285576704" target="_blank" rel="noopener noreferrer">Aavegotchi wapGHST Staking</a> on Polygon went live.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="protocols">Protocols<a class="hash-link" href="#protocols" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_mojV" id="ethereum">Ethereum<a class="hash-link" href="#ethereum" title="Direct link to heading">​</a></h4><p>Let's start with Ethereum, since it had the first deployments. Focusing in on the daily <code>Deposit</code> events on Ethereum,
we get the following chart:
<a target="_blank" href="/apollo-docs/assets/files/daily-deposits-eth-a41e937eaf648b143bf97c7798e3aac9.svg"><img loading="lazy" src="/apollo-docs/assets/images/daily-deposits-eth-a41e937eaf648b143bf97c7798e3aac9.svg" width="4938" height="2648" class="img_E7b_"></a></p><p>Looking at those first deposits and their symbols, we can figure out which protocols spearheaded ERC4626 adoption:</p><table><thead><tr><th align="left">Symbol</th><th>First_occurence</th><th align="left">Total_deposits</th><th align="left">Tx_hash</th></tr></thead><tbody><tr><td align="left">d3CVX</td><td>2022-02-14</td><td align="left">58</td><td align="left">0x3bde42aef1d795ec11a2fdec2508fca880a4a73b4818e743790e6a14b2850b26</td></tr><tr><td align="left">fei3crvCVX</td><td>2022-02-23</td><td align="left">111</td><td align="left">0xb7d0cc8597c00bdee0363c1a69db236e50e247403315650f8e5c6d76d18720e1</td></tr><tr><td align="left">tricryptoCVX</td><td>2022-02-24</td><td align="left">13</td><td align="left">0xa116b76522fcf8a5efad14cf8ed4817c2ee6b5bc884b16cf752c6f18b2fc015d</td></tr><tr><td align="left">d3convex</td><td>2022-02-24</td><td align="left">14</td><td align="left">0x3be7f2ce5ddf77d923ed56b5dd4ddbde64a622e4075984be0a5727e417ec462b</td></tr><tr><td align="left">fei3crvConvex</td><td>2022-02-24</td><td align="left">5</td><td align="left">0x64dab869db30d6b1f817b09bb8c0b4fd8b89f617f075cf2a86b743768c9a5d5b</td></tr><tr><td align="left">alusd3crvConvex</td><td>2022-02-25</td><td align="left">4</td><td align="left">0xc06d393589da3f911912b97f879c95ed22c345bb1aa208c039b477b4db16912b</td></tr><tr><td align="left">FRX3CRVCVX</td><td>2022-02-25</td><td align="left">18</td><td align="left">0x946ddcc89737b64ca2598dea0ef9aedf123072804f90f96f437959995ad0a6cc</td></tr><tr><td align="left">steCRVCVX</td><td>2022-02-25</td><td align="left">24</td><td align="left">0x48e7c4ae4adc241375449b392c58236427758e878c8d5b8aa9a80d6fae0d068f</td></tr><tr><td align="left">USTwCVX</td><td>2022-02-25</td><td align="left">29</td><td align="left">0x2b8d499ce18b85c52193e03a1292fd833835c8122f1046fa1ce7b4434cbc3b10</td></tr><tr><td align="left">(re)TOKE</td><td>2022-03-06</td><td align="left">1</td><td align="left">0xddc45b5f98e26d8a0331004fcb753d1bbdc6410295acb05bb201a0702bee9990</td></tr><tr><td align="left">tsTRIBE</td><td>2022-03-21</td><td align="left">5</td><td align="left">0x1e54269a8673a8620bef3a1c29a0d324ab608d5080e3937bb491a57ccc4344ec</td></tr><tr><td align="left">wfFEI-8</td><td>2022-03-22</td><td align="left">4</td><td align="left">0xdcc3cb38450972076ff91ba6ef798355635db1bdeba581f409863cda997e83a4</td></tr><tr><td align="left">TTV</td><td>2022-03-30</td><td align="left">1</td><td align="left">0x7c5cef1e9fa8f2f52a0b7baeb5db83fc85dae357e39c657f2fea3635b1827ada</td></tr><tr><td align="left">cvxFXSFXS</td><td>2022-04-05</td><td align="left">38</td><td align="left">0x2c1a66d9024c734f3aa204306973d9ecd3d13bd5c84e8ea1c31fa3ea852cf0d3</td></tr><tr><td align="left">rETHwstETH</td><td>2022-04-06</td><td align="left">5</td><td align="left">0xf8273032e398567741f938c4daf34ece9dd70aaef4fd476728d349b9ca8016f8</td></tr><tr><td align="left">cvxCRVCRV</td><td>2022-04-10</td><td align="left">41</td><td align="left">0xe542dbe25913ed321485ebd75bea95ee5bcb9e6ccbc3fd6a387f61f82b7f11be</td></tr><tr><td align="left">WOUSD</td><td>2022-04-11</td><td align="left">10</td><td align="left">0x6ca75d83741ba76c0ead05fb7bc93240472460a601fca1e8e236f976485956bd</td></tr><tr><td align="left">tsBAL</td><td>2022-04-19</td><td align="left">1</td><td align="left">0xe66b53b0ac06c9617010197d370ed68792aef7a6b30e8bfa200a2f77e7aec1ce</td></tr><tr><td align="left">tALCX</td><td>2022-04-19</td><td align="left">1</td><td align="left">0x7244feb527877b8d80ae71a4d044423087bbca0d0c52f70ea94df8366be52dbf</td></tr><tr><td align="left">alETHLp</td><td>2022-04-19</td><td align="left">1</td><td align="left">0xe8310a56c5721598373a936e6ffc04714510011a4fcee729afb142d703954284</td></tr><tr><td align="left">ALCXETH</td><td>2022-04-19</td><td align="left">2</td><td align="left">0x56ab7cce4626c0d31af10537d75143ca2016b54063677577f0dad5f8dc32ff2b</td></tr><tr><td align="left">4626-fFEI-8</td><td>2022-04-19</td><td align="left">1</td><td align="left">0x2985f3271ff49ffaf37931f35cf96a7283fa112f2027cec979b1c454f5b6aa86</td></tr><tr><td align="left">vTHOR</td><td>2022-04-25</td><td align="left">2289</td><td align="left">0x545638df92ff8743e9eeb004385ff72ed4fdc76d8913b40a2274290e66245fb0</td></tr></tbody></table><p>From this table, we can see that <a href="https://www.convexfinance.com" target="_blank" rel="noopener noreferrer">Convex Finance</a> were the earliest adopters of ERC4626.
They use it in some of their staking pools, specifically for staking Curve LP tokens. There are other
tokens, like <code>(re)TOKE</code> (part of TOKEMAK) which only have 1 deposit over the course of their lifetime, so we're not going to mention those.
If you're looking for that secret single deposit alpha, download the dataset above!
Convex has currently deployed the most ERC4626 vaults.</p><p>Next up, we start to see some implementations from the original authors of ERC4626: <a href="https://fei.money/" target="_blank" rel="noopener noreferrer">Fei Protocol</a>.
Tokens like <code>tsTribe</code> and <code>tsBAL</code> are part of the <a href="https://medium.com/fei-protocol/the-tribe-dao-strongly-believes-that-a-healthy-and-thriving-defi-ecosystem-needs-a-robust-platform-b1faea700dfa" target="_blank" rel="noopener noreferrer">Tribe Turbo</a>
deployments. They don't seem to be active, though.</p><p><code>WOUSD</code> is part of a protocol called <a href="https://www.ousd.com" target="_blank" rel="noopener noreferrer">Origin Dollar</a>, a yield bearing stablecoin. Finally we have
<code>vTHOR</code>, which is part of <a href="https://thorswap.finance" target="_blank" rel="noopener noreferrer">Thorswap</a>. On Ethereum, this is by far the most popular ERC4626 vault
by number of deposits.</p><p>If we sort by the most active ERC4626 vaults, we get the following table:</p><table><thead><tr><th align="left">Symbol</th><th align="right">Number of Deposits</th></tr></thead><tbody><tr><td align="left">vTHOR</td><td align="right">2289</td></tr><tr><td align="left">xMPL</td><td align="right">435</td></tr><tr><td align="left">uCVX</td><td align="right">115</td></tr><tr><td align="left">fei3crvCVX</td><td align="right">111</td></tr><tr><td align="left">d3CVX</td><td align="right">58</td></tr><tr><td align="left">imUSD</td><td align="right">47</td></tr><tr><td align="left">cvxCRVCRV</td><td align="right">41</td></tr><tr><td align="left">cvxFXSFXS</td><td align="right">38</td></tr><tr><td align="left">USTwCVX</td><td align="right">29</td></tr><tr><td align="left">steCRVCVX</td><td align="right">24</td></tr><tr><td align="left">FRX3CRVCVX</td><td align="right">18</td></tr><tr><td align="left">d3convex</td><td align="right">14</td></tr><tr><td align="left">tricryptoCVX</td><td align="right">13</td></tr><tr><td align="left">WOUSD</td><td align="right">10</td></tr><tr><td align="left">rETHwstETH</td><td align="right">5</td></tr><tr><td align="left">fei3crvConvex</td><td align="right">5</td></tr><tr><td align="left">tsTRIBE</td><td align="right">5</td></tr><tr><td align="left">wfFEI-8</td><td align="right">4</td></tr><tr><td align="left">∞-yvWETH-xPYT</td><td align="right">4</td></tr><tr><td align="left">alusd3crvConvex</td><td align="right">4</td></tr><tr><td align="left">imBTC</td><td align="right">3</td></tr><tr><td align="left">tsgOHM</td><td align="right">3</td></tr><tr><td align="left">ALCXETH</td><td align="right">2</td></tr><tr><td align="left">4626-fFEI-8</td><td align="right">1</td></tr><tr><td align="left">alETHLp</td><td align="right">1</td></tr><tr><td align="left">tALCX</td><td align="right">1</td></tr><tr><td align="left">aave2-CLR-S</td><td align="right">1</td></tr><tr><td align="left">tsBAL</td><td align="right">1</td></tr><tr><td align="left">TTV</td><td align="right">1</td></tr><tr><td align="left">Frax3Crv</td><td align="right">1</td></tr><tr><td align="left">D3</td><td align="right">1</td></tr><tr><td align="left">BAUSDC-2206</td><td align="right">1</td></tr><tr><td align="left">(re)TOKE</td><td align="right">1</td></tr></tbody></table><p>Aside from Thorswap and Convex, two other very popular ERC4626 deployments are <code>xMPL</code> from <a href="https://maple.finance" target="_blank" rel="noopener noreferrer">Maple Finance</a>
and <code>uCVX</code>, a <a href="https://mirror.xyz/0xE90c74145245B498fef924fAdC7bb34253c7cF90/WEj9OWAbvWMJ1xooZ3SOIAWvkp3k5t_mpOXL6EdyRFM" target="_blank" rel="noopener noreferrer">partnership</a>
between <strong>Pirex</strong> and <strong>Llama Airforce</strong> which allows you to deposit <code>pxCVX</code>, a vault for <code>CVX</code>. Composability in action!</p><p>vTHOR currently manages about $12,7M USD of THOR deposits, and xMPL around $45M of MPL. So even though vTHOR has more deposits,
xMPL manages a lot more assets.</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="polygon">Polygon<a class="hash-link" href="#polygon" title="Direct link to heading">​</a></h4><p><a target="_blank" href="/apollo-docs/assets/files/daily-deposits-poly-4ed836062a95c6738493da84691d0734.svg"><img loading="lazy" src="/apollo-docs/assets/images/daily-deposits-poly-4ed836062a95c6738493da84691d0734.svg" width="4938" height="2648" class="img_E7b_"></a>
Polygon usage really only started after the deployment of <strong>wapGHST</strong> staking on May 4th.
On May 26th, <a href="https://mstable.org/" target="_blank" rel="noopener noreferrer">mStable</a> <a href="https://medium.com/mstable/mstable-save-gets-erc-4626-upgrade-5d94e64bf694" target="_blank" rel="noopener noreferrer">upgraded</a>
their Save Contracts to implement ERC4626, and deposits stayed consistently high.</p><p>Zooming in on the most active vaults, <strong>mStable's</strong> <code>imUSD</code> is at the top, followed by <code>wapGHST</code>:</p><table><thead><tr><th align="left">Symbol</th><th align="right">Number of Deposits</th></tr></thead><tbody><tr><td align="left">imUSD</td><td align="right">2124</td></tr><tr><td align="left">wapGHST</td><td align="right">1845</td></tr><tr><td align="left">LOL</td><td align="right">20</td></tr><tr><td align="left">eVault</td><td align="right">18</td></tr><tr><td align="left">LOLt</td><td align="right">14</td></tr><tr><td align="left">svUSDC</td><td align="right">10</td></tr><tr><td align="left">swMATIC</td><td align="right">4</td></tr><tr><td align="left">LOLT</td><td align="right">3</td></tr><tr><td align="left">USD+</td><td align="right">3</td></tr><tr><td align="left">swUSDc</td><td align="right">3</td></tr><tr><td align="left">LOLB</td><td align="right">1</td></tr><tr><td align="left">stUSD+</td><td align="right">1</td></tr></tbody></table><p><code>imUSD</code> currently manages around $6,5M mUSD, and wapGHST manages $1,7M worth of aPolGHST, which is the Aave token for
Aavegotchi GHST.</p><p>We could not find any info on <code>LOL</code>, which is a vault for Aave Polygon USDC.
<code>eVault</code> was interesting. Most of the <code>Deposit</code> events where from <a href="https://polygonscan.com/address/0x2C882729f2710D0b8d23d98199ba9FdA1aF05109" target="_blank" rel="noopener noreferrer">0x2C882729f2710D0b8d23d98199ba9FdA1aF05109</a>,
which turned out to be a mocking contract with LINK as its underlying token.
The real implementation was at <a href="https://polygonscan.com/address/0xff07A39665740eB95E57ccDC3963B026741cC88E" target="_blank" rel="noopener noreferrer">0xff07A39665740eB95E57ccDC3963B026741cC88E</a>,
which is a QiDAO vault for Quickswap WMATIC-QI LP tokens. The contract was only deployed 5 days ago at the time of writing (June 14, 2022).</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="optimism">Optimism<a class="hash-link" href="#optimism" title="Direct link to heading">​</a></h4><p><a target="_blank" href="/apollo-docs/assets/files/daily-deposits-opt-1557df63141e5cb33d5018bea8592fdb.svg"><img loading="lazy" src="/apollo-docs/assets/images/daily-deposits-opt-1557df63141e5cb33d5018bea8592fdb.svg" width="6401" height="3569" class="img_E7b_"></a>
Optimism had 0 ERC4626 activity until May 24th, when <a href="https://rubicon.finance/" target="_blank" rel="noopener noreferrer">Rubicon Finance</a> upgraded their tokens to implement the standard.
Aside from Rubicon (the <code>bath</code> tokens), there doesn't seem to be a lot of ERC4626 activity:</p><table><thead><tr><th align="left">Symbol</th><th align="right">Number of Deposits</th></tr></thead><tbody><tr><td align="left">bathUSDC</td><td align="right">400</td></tr><tr><td align="left">bathOP</td><td align="right">246</td></tr><tr><td align="left">bathETH</td><td align="right">175</td></tr><tr><td align="left">bathDAI</td><td align="right">38</td></tr><tr><td align="left">bathUSDT</td><td align="right">38</td></tr><tr><td align="left">bathSNX</td><td align="right">30</td></tr><tr><td align="left">nukenke</td><td align="right">5</td></tr><tr><td align="left">bathWBTC</td><td align="right">4</td></tr><tr><td align="left">dmoUSDC-Basis-Trading</td><td align="right">2</td></tr><tr><td align="left">CSET</td><td align="right">1</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_mojV" id="conclusion">Conclusion<a class="hash-link" href="#conclusion" title="Direct link to heading">​</a></h2><p>ERC4626 is definitely picking up some steam, but there aren't many big protocols like Aave or Compound that upgraded their
contracts yet, even though the whole DeFi ecosystem would clearly benefit from it. Kudos to all the protocols that did implement it!</p><p>If you want to analyze the data yourself, you can download it here: <a target="_blank" href="/apollo-docs/assets/files/erc4626_deposits-fdd488d264947e92a5dfbf7c79d4cf09.csv">erc4626_deposits.csv</a>.
You can also try out Apollo at <a href="https://github.com/chainbound/apollo" target="_blank" rel="noopener noreferrer">github.com/chainbound/apollo</a>, make sure to read the
<a href="https://apollo.chainbound.io" target="_blank" rel="noopener noreferrer">documentation</a>!</p><div class="admonition admonition-caution alert alert--warning"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</h5></div><div class="admonition-content"><p>Apollo is still alpha software, and there will be bugs. If you find any, please open an issue on Github.</p></div></div>]]></content:encoded>
            <category>apollo</category>
            <category>erc4626</category>
            <category>tutorial</category>
        </item>
    </channel>
</rss>